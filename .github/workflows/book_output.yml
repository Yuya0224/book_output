name: Main

on: [push]

jobs:
  rspec:
    runs-on: ubuntu-18.04

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD:
        ports:
          - 3306:3306
        # options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Set up Ruby 2.7.2
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2

      - name: Cache gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Cache node_modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install

      - name: bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # - name: Verify MySQL connection from host
      #   run: |
      #     sudo apt-get install -y mysql-client libmysqlclient-dev
      #     mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
      #     mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql

      # - name: Setup Database
      #   env:
      #     RAILS_ENV: test
      #     DB_PASSWORD:
      #     DB_PORT: ${{ job.services.mysql.ports[3306] }}
      #   run: |
      #     cp config/database.yml.ci config/database.yml
      #     bin/rails db:prepare

      - name: run rspec
        run: bundle exec rspec
  rubocop:
    runs-on: ubuntu-18.04

    container:
      image: ruby:2.7.2
      env:
        RAILS_ENV: test

    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: bundle install
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: run rubocop
        run: bundle exec rubocop
